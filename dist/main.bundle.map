{"version":3,"sources":["webpack:///./src/app/message.service.ts","webpack:///./src/app/user.service.ts","webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/equal-validator.directive.ts","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/index/index.component.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/header/header.component.css","webpack:///./src/app/index/index.component.css","webpack:///./src/app/login/login.component.css","webpack:///./src/app/register/register.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/header/header.component.html","webpack:///./src/app/index/index.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/register/register.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http ,Headers, RequestOptions} from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n\r\n  constructor(private http: Http,private authService:AuthService) { }\r\n\r\n  createNewMessageGroup(friendId){\r\n  \treturn this.http.put('/api/createNewMessageGroup/'+friendId+'/'+this.authService.getCurrentUserId(),null, this.authService.getHTTPHeader())\r\n  \t\t.map(res => res.json());\r\n  }\r\n\r\n  getMessageGroup(id){\r\n  \treturn this.http.get('/api/getMessageGroup/'+id,this.authService.getHTTPHeader())\r\n  \t\t.map(res => res.json());\r\n  }\r\n\r\n  sendMessage(messageOb:any){\r\n  \treturn this.http.post('/api/sendMessage', messageOb,this.authService.getHTTPHeader())\r\n  \t.map(res => res.json());\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/message.service.ts","import { Injectable } from '@angular/core';\nimport { Http ,Headers, RequestOptions} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class UserService {\n\n  constructor(private http: Http,private authService:AuthService) \n  {\n\n  }\n\n  getUsers(){\n\t\n  \treturn this.http.get('/api/users',this.authService.getHTTPHeader())\n  \t\t.map(res => res.json());\n  }\n\n  getAllFriends(){\n\n  \treturn this.http.get('/api/getAllFriends/'+this.authService.getCurrentUserId(),this.authService.getHTTPHeader())\n  \t\t.map(res => res.json());\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 204;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 204\n// module chunks = 2","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component ,OnInit} from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  \n\n  constructor(private authService: AuthService) {\n  \t\n  }\n\n\n  ngOnInit() {\n       \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule,NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AuthService } from './auth.service';\r\nimport { UserService } from './user.service';\r\nimport { MessageService } from './message.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { EqualValidator } from './equal-validator.directive';\r\nimport { JuriNameValidator } from './custom.directive';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n// Define the routes\r\nconst ROUTES = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'index',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'index',\r\n    component: IndexComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    IndexComponent,\r\n    HeaderComponent,\r\n    EqualValidator\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    RouterModule.forRoot(ROUTES),\r\n    BrowserAnimationsModule,\r\n    \r\n    \r\n    MDBBootstrapModule.forRoot()\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    UserService,\r\n    MessageService\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  schemas: [ NO_ERRORS_SCHEMA ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\r\n    providers: [\r\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => EqualValidator), multi: true }\r\n    ]\r\n})\r\nexport class EqualValidator implements Validator {\r\n    constructor( @Attribute('validateEqual') public validateEqual: string\r\n       ) {\r\n\r\n    }\r\n    validate(c: AbstractControl): { [key: string]: any } {\r\n        if(c.value){\r\n            let self = c.value.trim();\r\n            let e = c.root.get(this.validateEqual);\r\n\r\n            //console.log(c.value);\r\n            if(e.value){\r\n                let other =e.value.trim();\r\n                if(self!='' && other!=''){\r\n                    if(self===other){\r\n                        if(e.errors['validateEqual']!=null){ delete e.errors['validateEqual'];}\r\n                        if(c.errors['validateEqual']!=null){ delete c.errors['validateEqual'];}\r\n                        \r\n                        if (!Object.keys(e.errors).length) e.setErrors(null);\r\n                        if (!Object.keys(c.errors).length) c.setErrors(null);\r\n                    }else{\r\n                        return { validateEqual: { valid: false } };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n   \r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/equal-validator.directive.ts","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  currentUser : any=undefined;\n\n  constructor(private authService: AuthService,private router: Router) { \n  \t\n  }\n\n  ngOnInit() {\n  \tthis.currentUser=this.authService.getCurrentUser();\n  \t\n  }\n\n  logout(){\n    this.authService.removeToken();\n    location.href='/';\n  }\n\n  login(){\n    this.router.navigate(['/login']);\n  }\n\n  register(){\n    this.router.navigate(['/register']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/header/header.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../user.service';\r\nimport { AuthService } from '../auth.service';\r\nimport { MessageService } from '../message.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n  constructor(private userService: UserService,private authService: AuthService,\r\n    private router: Router,private messageService: MessageService) { }\r\n\r\n  messageGroups: any[] = [];\r\n  currentUser:any=this.authService.getCurrentUser();\r\n  messageText:String = '';\r\n  messageGroup:any=undefined;\r\n\r\n  ngOnInit() {\r\n  \t// get users from secure api end point\r\n    if(this.authService.isLoggedIn()){\r\n      this.userService.getAllFriends()\r\n        .subscribe(users => {\r\n            this.messageGroups = users.messageGroups;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n    }else{\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n  createNewMessageGroup(friendId) {\r\n      this.messageService.createNewMessageGroup(friendId)\r\n      .subscribe(\r\n          data => {\r\n          console.log(data);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n      });\r\n  } \r\n\r\n  selectChat(chatId){\r\n    this.messageService.getMessageGroup(chatId)\r\n      .subscribe(\r\n          data => {\r\n          console.log(data);\r\n          this.messageGroup=data;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n      });\r\n  }\r\n\r\n  sendMessage(messageOb:any){\r\n    messageOb.messageGroupID=this.messageGroup._id;\r\n    messageOb.currentUserID=this.currentUser._id;\r\n\r\n    this.messageService.sendMessage(messageOb)\r\n      .subscribe(\r\n          data => {\r\n          \r\n          this.messageGroup.messages.push(data);\r\n          this.messageText='';\r\n        },\r\n        error => {\r\n          console.log(error);\r\n      });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/index/index.component.ts","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport {Router} from '@angular/router';\nimport {FormControl, Validators} from '@angular/forms';\n\n// const EMAIL_REGEX = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n\nexport class LoginComponent {\n\t model: any = {};\n   \n   error:String = '';\n  \tconstructor(private authService: AuthService,private router: Router) { }\n\n  \tngOnInit() {\n  \t}\n\n    // emailFormControl = new FormControl('', [Validators.required,Validators.pattern(EMAIL_REGEX)]);\n    // passwordFormControl = new FormControl('', [Validators.required]);\n\n  \tlogin() {\n      console.log(this.model);\n    \tthis.authService.login(this.model)\n    \t.subscribe(\n      \t\tdata => {\n          if(data.success){\n            \n            location.href='/';//reload poge\n            \n          }else{\n            this.error=data.message;\n          }\n        \t\n      \t},\n      \terror => {\n        \tconsole.log(error);\n      \t});\n  \t}\t\n\n  \tgetToken(): void {\n        this.authService.getToken();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent  {\r\n\r\n  users: any = [];\r\n  model: any = {email:'',username:'',password:'',confirmPassword:''};\r\n  message:String = '';\r\n  constructor(private authService: AuthService,private router: Router) { }\r\n  \r\n\r\n  \r\n\r\n  register(model:any) {\r\n    \r\n    this.authService.register(model)\r\n    .subscribe(\r\n      data => {\r\n        \r\n        if(data.success){\r\n          \r\n          this.router.navigate(['/login']);\r\n        }else{\r\n          this.message=data.message;\r\n        }\r\n        \r\n      },\r\n      error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n   \r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/register/register.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Injectable } from '@angular/core';\nimport { Http ,Headers, RequestOptions} from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class AuthService {\n  currentUser : any=localStorage.getItem(\"currentUser\");\n\n  constructor(private http: Http) { }\n\n  // Get all posts from the API\n  getAllUsers() {\n    return this.http.get('/api/users')\n      .map(res => res.json());\n  }\n\n  register(user:any){\n  \treturn this.http.post('/api/register', user)\n  \t.map(res => res.json());\n  }\n\n  login(user:any){\n    return this.http.post('/api/authenticate', user)\n    .map(res=> {\n      // login successful if there's a jwt token in the response\n      if (res.json()) {\n\n        if(res.json().success){\n          var currentUser=JSON.stringify({_id:res.json()._id,email:res.json().email,username:res.json().username,token:res.json().token}) ;\n          this.setToken(currentUser);\n          return {success:true,message:'Authentication Successful.'};\n        }else{\n          return {success:false,message:res.json().message};\n        }\n      } else {\n        \n        return {success:false,message:'Authentication failed.'};\n      }\n    });\n    \n  }\n\n  setToken(user :any){\n    console.log(user);\n    localStorage.setItem(\"currentUser\", user);\n  }\n\n  getToken(){\n    var user=localStorage.getItem(\"currentUser\");\n    if(user){\n      return JSON.parse(user).token;\n    }else{\n      return '';\n    }\n    \n  }\n\n  getCurrentUser(){\n    var user=localStorage.getItem(\"currentUser\");\n    if(user){\n      return JSON.parse(user);\n    }else{\n      return undefined;\n    }\n    \n  }\n\n  getCurrentUserId(){\n    var user=localStorage.getItem(\"currentUser\");\n    if(user){\n      return JSON.parse(user)._id;\n    }else{\n      return '';\n    }\n  }\n\n  isLoggedIn(){\n    var user=localStorage.getItem(\"currentUser\");\n    if(user){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  removeToken(){\n    localStorage.removeItem(\"currentUser\");\n  }\n\n  getHTTPHeader(){\n    let headers = new Headers({ 'token':  this.getToken() });\n    let options = new RequestOptions({ headers: headers });\n    return options;\n  }\n  \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 406\n// module chunks = 2","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.css\n// module id = 407\n// module chunks = 2","module.exports = \"/*html,body{height:100%;}\\r\\n.m100 {\\r\\n    height:100%;\\r\\n    min-height:100%;\\r\\n}*/\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/index/index.component.css\n// module id = 408\n// module chunks = 2","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = 409\n// module chunks = 2","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.css\n// module id = 410\n// module chunks = 2","module.exports = \"\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 411\n// module chunks = 2","module.exports = \"<!-- <mdb-navbar SideClass=\\\"navbar fixed-top navbar-expand-lg navbar-dark bg-default scrolling-navbar\\\" [containerInside]=\\\"false\\\">\\r\\n    <logo>\\r\\n        <a class=\\\"logo navbar-brand\\\" href=\\\"#\\\"><strong>Navbar</strong></a>\\r\\n    </logo>\\r\\n    <links>\\r\\n\\r\\n        <ul class=\\\"navbar-nav\\\">\\r\\n            <li *ngIf=\\\"currentUser\\\" class=\\\"nav-item waves-light\\\" mdbRippleRadius>\\r\\n                <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n            </li>\\r\\n           \\r\\n            <li *ngIf=\\\"!currentUser\\\" class=\\\"nav-item waves-light\\\" mdbRippleRadius>\\r\\n                <a [routerLink]=\\\"['/login']\\\" class=\\\"nav-link \\\">\\r\\n\\t\\t\\t\\t  Sign in\\r\\n\\t\\t\\t\\t</a>\\r\\n            </li>\\r\\n            <li *ngIf=\\\"!currentUser\\\" class=\\\"nav-item waves-light\\\" mdbRippleRadius>\\r\\n                <a [routerLink]=\\\"['/register']\\\" class=\\\"nav-link \\\" >\\r\\n\\t\\t\\t\\t  Sign up\\r\\n\\t\\t\\t\\t</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </links>\\r\\n</mdb-navbar>\\r\\n -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.html\n// module id = 412\n// module chunks = 2","module.exports = \"<!-- Main -->\\r\\n<main>\\r\\n    <div class=\\\"container\\\" >\\r\\n    <div class=\\\"row justify-content-md-center\\\">\\r\\n        <div class=\\\"col col-md-3\\\">\\r\\n          <!--Panel-->\\r\\n          <div class=\\\"card\\\" >\\r\\n              <div class=\\\"card-header default-color white-text\\\">\\r\\n                  Featured\\r\\n              </div>\\r\\n              <div class=\\\"card-body \\\">\\r\\n                  <div class=\\\"list-group\\\">\\r\\n                    <a (click)=\\\"selectChat(messageGroup._id)\\\" class=\\\"list-group-item list-group-item-action\\\"  *ngFor=\\\"let messageGroup of messageGroups\\\">\\r\\n                      <span *ngIf=\\\"currentUser.username!=messageGroup.friendname1\\\">{{messageGroup.friendname1}}</span>\\r\\n                      <span *ngIf=\\\"currentUser.username!=messageGroup.friendname2\\\">{{messageGroup.friendname2}}</span>\\r\\n                    </a>\\r\\n                </div>\\r\\n              </div>\\r\\n              \\r\\n          </div>\\r\\n          <!--/.Panel-->\\r\\n\\r\\n          \\r\\n        </div>\\r\\n        <div class=\\\"col col-md-9\\\">\\r\\n          <!--Panel-->\\r\\n          <div class=\\\"card\\\" *ngIf=\\\"messageGroup\\\">\\r\\n              <div class=\\\"card-header default-color white-text\\\">\\r\\n                  Featured\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                \\r\\n                 <div *ngFor=\\\"let message of messageGroup.messages\\\">\\r\\n\\r\\n                    {{message.text}}\\r\\n                 </div>\\r\\n              </div>\\r\\n              <div class=\\\"card-footer \\\">\\r\\n                  \\r\\n                  <form  #sendMessageForm=\\\"ngForm\\\" novalidate \\r\\n                  (ngSubmit)=\\\"sendMessage(sendMessageForm.value)\\\">\\r\\n                  <div class=\\\"row justify-content-md-center\\\">\\r\\n                    <div class=\\\"col col-md-10\\\">\\r\\n                        <!-- <i class=\\\"fa fa-envelope prefix\\\"></i> -->\\r\\n                        <input mdbActive type=\\\"text\\\"  id=\\\"message\\\" placeholder=\\\"Type your message\\\" \\r\\n                        name=\\\"message\\\"\\r\\n                         #message=\\\"ngModel\\\" [(ngModel)]=\\\"messageText\\\" required>\\r\\n                        <!-- <label class=\\\"active\\\" for=\\\"message\\\">Type your message</label> -->\\r\\n                    </div>\\r\\n                    <div class=\\\"col col-md-2\\\">\\r\\n                        <!-- <a class=\\\"btn btn-primary btn-lg waves-light\\\" mdbRippleRadius>Send</a> -->\\r\\n                        <button class=\\\"btn btn-default waves-light\\\" mdbRippleRadius type=\\\"submit\\\" \\r\\n                         [disabled]=\\\"!sendMessageForm.form.valid\\\"\\r\\n                        >Send</button>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n              </div>\\r\\n          </div>\\r\\n          <!--/.Panel-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</main>\\r\\n<!-- /.Main -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/index/index.component.html\n// module id = 413\n// module chunks = 2","module.exports = \"<!-- Main -->\\r\\n<main>\\r\\n    <div class=\\\"container\\\" >\\r\\n    <div class=\\\"row mt-5 pt-5 justify-content-md-center\\\">\\r\\n            <div class=\\\"col-md-6 \\\">\\r\\n      <!-- Login form -->\\r\\n      <form (ngSubmit)=\\\"login()\\\" #loginForm=\\\"ngForm\\\">\\r\\n          <p class=\\\"h5 text-center mb-4\\\">Sign in</p>\\r\\n\\r\\n          <div class=\\\"md-form\\\">\\r\\n              <i class=\\\"fa fa-envelope prefix grey-text\\\"></i>\\r\\n              \\r\\n              <input   #email=\\\"ngModel\\\" type=\\\"text\\\" required name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\"\\r\\n              [(ngModel)]=\\\"model.email\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" mdbActive >\\r\\n              <label for=\\\"email\\\" >Your email</label>\\r\\n              <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" >\\r\\n\\r\\n                <small *ngIf=\\\"email.errors.required\\\" class=\\\"text-danger\\\">Email is required.</small>\\r\\n                \\r\\n                <small *ngIf=\\\"email.errors.pattern\\\" class=\\\"text-danger\\\">Please enter a valid email address.</small>\\r\\n\\r\\n              </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"md-form\\\">\\r\\n              <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\r\\n              <!-- <input type=\\\"password\\\" id=\\\"defaultForm-pass\\\" class=\\\"form-control\\\" mdbActive> -->\\r\\n              <input  type=\\\"password\\\"  name=\\\"password\\\" id=\\\"password\\\"\\r\\n               #password=\\\"ngModel\\\" required class=\\\"form-control\\\"\\r\\n              [(ngModel)]=\\\"model.password\\\" mdbActive>\\r\\n              <label for=\\\"password\\\">Your password</label>\\r\\n              \\r\\n             \\r\\n\\r\\n                <small *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.required\\\" class=\\\"text-danger\\\">Password is required.</small>\\r\\n               \\r\\n             \\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"text-center\\\">\\r\\n              <div><small *ngIf=\\\"error\\\" class=\\\"text-danger\\\">{{error}}</small></div>\\r\\n              <button class=\\\"btn btn-default waves-light\\\" mdbRippleRadius type=\\\"submit\\\" [disabled]=\\\"!loginForm.form.valid\\\">Sign in</button>\\r\\n          </div>\\r\\n      </form>\\r\\n      <!-- Login form -->\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n                    <div class=\\\"options\\\">\\r\\n                        <p>Not a member? <a [routerLink]=\\\"['/register']\\\">Sign Up</a></p>\\r\\n                        <p>Forgot <a href=\\\"#\\\">Password?</a></p>\\r\\n                    </div>\\r\\n                </div>\\r\\n      </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</main>\\r\\n<!-- /.Main -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = 414\n// module chunks = 2","module.exports = \"<!-- Main -->\\r\\n<main>\\r\\n    <div class=\\\"container\\\" >\\r\\n    <div class=\\\"row mt-5 pt-5 justify-content-md-center\\\">\\r\\n            <div class=\\\"col-md-6 \\\">\\r\\n      <!-- Login form -->\\r\\n      <form  #registerForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"register(registerForm.value)\\\">\\r\\n          <p class=\\\"h5 text-center mb-4\\\">Sign up</p>\\r\\n\\r\\n          <div class=\\\"md-form\\\">\\r\\n              <i class=\\\"fa fa-envelope prefix grey-text\\\"></i>\\r\\n              \\r\\n              <input   #email=\\\"ngModel\\\" type=\\\"text\\\" required name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\"\\r\\n              [(ngModel)]=\\\"model.email\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" mdbActive >\\r\\n              <label for=\\\"email\\\" class=\\\"active\\\">Your email</label>\\r\\n              <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" >\\r\\n\\r\\n                <small *ngIf=\\\"email.errors.required\\\" class=\\\"text-danger\\\">Email is required.</small>\\r\\n                \\r\\n                <small *ngIf=\\\"email.errors.pattern\\\" class=\\\"text-danger\\\">Please enter a valid email address.</small>\\r\\n\\r\\n              </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"md-form\\\">\\r\\n              <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\r\\n              \\r\\n              <input   #username=\\\"ngModel\\\" type=\\\"text\\\" required name=\\\"username\\\" id=\\\"username\\\" class=\\\"form-control\\\"\\r\\n              [(ngModel)]=\\\"model.username\\\"  mdbActive >\\r\\n              <label for=\\\"username\\\" class=\\\"active\\\">Your username</label>\\r\\n              \\r\\n              \\r\\n               <small *ngIf=\\\"username.invalid && (username.dirty || username.touched) && username.errors.required\\\" class=\\\"text-danger\\\">Username is required.</small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"md-form\\\">\\r\\n              <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\r\\n              <input  type=\\\"password\\\"  name=\\\"password\\\" id=\\\"password\\\" validateEqual=\\\"confirmPassword\\\" \\r\\n               #password=\\\"ngModel\\\" required class=\\\"form-control\\\"\\r\\n              [(ngModel)]=\\\"model.password\\\" mdbActive>\\r\\n              <label for=\\\"password\\\">Your password</label>\\r\\n              \\r\\n               <small *ngIf=\\\"password.invalid && (password.dirty || password.touched) && password.errors.required\\\" class=\\\"text-danger\\\">Password is required.</small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"md-form\\\">\\r\\n              <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\r\\n              <input  type=\\\"password\\\"  name=\\\"confirmPassword\\\" id=\\\"confirmPassword\\\"  validateEqual=\\\"password\\\" \\r\\n               #confirmPassword=\\\"ngModel\\\" required class=\\\"form-control\\\" [(ngModel)]=\\\"model.confirmPassword\\\"\\r\\n               mdbActive>\\r\\n              <label for=\\\"confirmPassword\\\">Confirm password</label>\\r\\n              \\r\\n               <small *ngIf=\\\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched) && confirmPassword.errors.required\\\" class=\\\"text-danger\\\">Confirm Password is required.</small>\\r\\n\\r\\n               <small *ngIf=\\\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched) && confirmPassword.errors.validateEqual\\\" class=\\\"text-danger\\\">Password mismatch.</small>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <div><small *ngIf=\\\"message\\\" class=\\\"text-danger\\\">{{message}}</small></div>\\r\\n              <button class=\\\"btn btn-default waves-light\\\" mdbRippleRadius type=\\\"submit\\\"  [disabled]=\\\"!registerForm.form.valid\\\"\\r\\n              >Sign up</button>\\r\\n          </div>\\r\\n      </form>\\r\\n      <!-- Login form -->\\r\\n\\r\\n      </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</main>\\r\\n<!-- /.Main -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.html\n// module id = 415\n// module chunks = 2"],"sourceRoot":""}